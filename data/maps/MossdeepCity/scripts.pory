raw `
.set LOCALID_GRUNT_1, 10
.set LOCALID_GRUNT_2, 11
.set LOCALID_GRUNT_3, 12
.set LOCALID_GRUNT_4, 13
.set LOCALID_MAXIE, 14
.set LOCALID_SCOTT, 16

MossdeepCity_MapScripts::
	map_script MAP_SCRIPT_ON_TRANSITION, MossdeepCity_OnTransition
	.byte 0

MossdeepCity_OnTransition:
	clearflag FLAG_MOSSDEEP_GYM_SWITCH_1
	clearflag FLAG_MOSSDEEP_GYM_SWITCH_2
	clearflag FLAG_MOSSDEEP_GYM_SWITCH_3
	clearflag FLAG_MOSSDEEP_GYM_SWITCH_4
	call_if_set FLAG_SYS_WEATHER_CTRL, Common_EventScript_SetAbnormalWeather
	end

MossdeepCity_EventScript_PokefanF::
	lock
	faceplayer
	goto_if_set FLAG_RECEIVED_HM_DIVE, MossdeepCity_EventScript_PokefanFMagmaGone
	msgbox MossdeepCity_Text_SpaceCenterReceivedLetter, MSGBOX_DEFAULT
	release
	end

MossdeepCity_EventScript_PokefanFMagmaGone::
	msgbox MossdeepCity_Text_SpaceCenterLaunchingRockets, MSGBOX_DEFAULT
	release
	end

MossdeepCity_EventScript_Sailor::
	lock
	faceplayer
	goto_if_set FLAG_RECEIVED_HM_DIVE, MossdeepCity_EventScript_SailorMagmaGone
	msgbox MossdeepCity_Text_MossdeepTargetedByMagma, MSGBOX_DEFAULT
	release
	end

MossdeepCity_EventScript_SailorMagmaGone::
	msgbox MossdeepCity_Text_FeelReliefOnLand, MSGBOX_DEFAULT
	release
	end

MossdeepCity_EventScript_NinjaBoy::
	msgbox MossdeepCity_Text_WailmerWatching, MSGBOX_NPC
	end

MossdeepCity_EventScript_ExpertM::
	msgbox MossdeepCity_Text_LifeNeedsSeaToLive, MSGBOX_NPC
	end

MossdeepCity_EventScript_Girl::
	msgbox MossdeepCity_Text_NiceIfWorldCoveredByFlowers, MSGBOX_NPC
	end

MossdeepCity_EventScript_Woman::
	msgbox MossdeepCity_Text_SpecialSpaceCenterRock, MSGBOX_NPC
	setflag FLAG_SPOKE_TO_MOSSDEEP_WHITE_ROCK_LADY
	end

MossdeepCity_EventScript_WhiteRock::
	msgbox MossdeepCity_Text_ItsAWhiteRock, MSGBOX_SIGN
	end

MossdeepCity_EventScript_GymSign::
	msgbox MossdeepCity_Text_GymSign, MSGBOX_SIGN
	end

MossdeepCity_EventScript_CitySign::
	msgbox MossdeepCity_Text_CitySign, MSGBOX_SIGN
	end

MossdeepCity_EventScript_SpaceCenterSign::
	msgbox MossdeepCity_Text_SpaceCenterSign, MSGBOX_SIGN
	end

MossdeepCity_EventScript_VisitedMossdeep::
	setflag FLAG_VISITED_MOSSDEEP_CITY
	setvar VAR_TEMP_1, 1
	end

MossdeepCity_EventScript_TeamMagmaEnterSpaceCenter::
	lockall
	applymovement LOCALID_MAXIE, MossdeepCity_Movement_MaxieGestureToSpaceCenter
	waitmovement 0
	applymovement LOCALID_GRUNT_1, MossdeepCity_Movement_GruntFaceSpaceCenter
	applymovement LOCALID_GRUNT_2, MossdeepCity_Movement_GruntFaceSpaceCenter
	applymovement LOCALID_GRUNT_3, MossdeepCity_Movement_GruntFaceSpaceCenter
	applymovement LOCALID_GRUNT_4, MossdeepCity_Movement_GruntFaceSpaceCenter
	waitmovement 0
	applymovement LOCALID_MAXIE, MossdeepCity_Movement_MaxieEnterSpaceCenter
	applymovement LOCALID_GRUNT_1, MossdeepCity_Movement_Grunt1EnterSpaceCenter
	applymovement LOCALID_GRUNT_2, MossdeepCity_Movement_Grunt2EnterSpaceCenter
	applymovement LOCALID_GRUNT_3, MossdeepCity_Movement_Grunt3EnterSpaceCenter
	applymovement LOCALID_GRUNT_4, MossdeepCity_Movement_Grunt4EnterSpaceCenter
	waitmovement 0
	removeobject LOCALID_MAXIE
	removeobject LOCALID_GRUNT_1
	removeobject LOCALID_GRUNT_2
	removeobject LOCALID_GRUNT_3
	removeobject LOCALID_GRUNT_4
	delay 30
	setvar VAR_MOSSDEEP_CITY_STATE, 2
	setflag FLAG_HIDE_MOSSDEEP_CITY_TEAM_MAGMA
	releaseall
	end

MossdeepCity_Movement_MaxieGestureToSpaceCenter:
	delay_16
	face_right
	delay_16
	delay_16
	delay_16
	delay_16
	face_left
	delay_16
	delay_16
	step_end

MossdeepCity_Movement_GruntFaceSpaceCenter:
	face_right
	delay_16
	delay_16
	delay_16
	step_end

MossdeepCity_Movement_MaxieEnterSpaceCenter:
	walk_down
	walk_right
	walk_right
	walk_down
	walk_down
	walk_down
	walk_right
	walk_right
	walk_right
	walk_right
	walk_right
	walk_right
	walk_right
	step_end

MossdeepCity_Movement_Grunt1EnterSpaceCenter:
	delay_16
	delay_8
	walk_down
	walk_down
	walk_down
	walk_right
	walk_right
	walk_right
	walk_down
	walk_down
	walk_down
	walk_right
	walk_right
	walk_right
	walk_right
	walk_right
	walk_right
	walk_right
	step_end

MossdeepCity_Movement_Grunt2EnterSpaceCenter:
	delay_16
	delay_8
	walk_down
	walk_down
	walk_right
	walk_right
	walk_right
	walk_down
	walk_down
	walk_down
	walk_right
	walk_right
	walk_right
	walk_right
	walk_right
	walk_right
	walk_right
	step_end

MossdeepCity_Movement_Grunt3EnterSpaceCenter:
	delay_16
	delay_8
	walk_down
	walk_right
	walk_right
	walk_right
	walk_down
	walk_down
	walk_down
	walk_right
	walk_right
	walk_right
	walk_right
	walk_right
	walk_right
	walk_right
	step_end

MossdeepCity_Movement_Grunt4EnterSpaceCenter:
	delay_16
	delay_8
	walk_right
	walk_right
	walk_right
	walk_down
	walk_down
	walk_down
	walk_right
	walk_right
	walk_right
	walk_right
	walk_right
	walk_right
	walk_right
	step_end

MossdeepCity_EventScript_Man::
	lock
	faceplayer
	msgbox MossdeepCity_Text_SurfExhilarating, MSGBOX_DEFAULT
	applymovement VAR_LAST_TALKED, Common_Movement_FaceOriginalDirection
	waitmovement 0
	release
	end

MossdeepCity_EventScript_KingsRockBoy::
	lock
	faceplayer
	goto_if_set FLAG_RECEIVED_KINGS_ROCK, MossdeepCity_EventScript_ReceivedKingsRock
	msgbox MossdeepCity_Text_WantKingsRockStevenGaveMe, MSGBOX_YESNO
	goto_if_eq VAR_RESULT, NO, MossdeepCity_EventScript_DeclineKingsRock
	msgbox MossdeepCity_Text_YouCanKeepIt, MSGBOX_DEFAULT
	giveitem ITEM_KINGS_ROCK
	goto_if_eq VAR_RESULT, FALSE, Common_EventScript_ShowBagIsFull
	setflag FLAG_RECEIVED_KINGS_ROCK
	release
	end

MossdeepCity_EventScript_ReceivedKingsRock::
	msgbox MossdeepCity_Text_StevensHouseOverThere, MSGBOX_DEFAULT
	release
	end

MossdeepCity_EventScript_DeclineKingsRock::
	msgbox MossdeepCity_Text_WhatToDoWithWeirdRock, MSGBOX_DEFAULT
	release
	end

MossdeepCity_EventScript_BlackBelt::
	msgbox MossdeepCity_Text_SootopolisNewGymLeader, MSGBOX_NPC
	end

MossdeepCity_EventScript_Scott::
	lock
	faceplayer
	msgbox MossdeepCity_Text_ScottSomethingWrongWithTown, MSGBOX_DEFAULT
	closemessage
	call_if_eq VAR_FACING, DIR_NORTH, MossdeepCity_EventScript_ScottExitNorth
	call_if_eq VAR_FACING, DIR_EAST, MossdeepCity_EventScript_ScottExitEast
	addvar VAR_SCOTT_STATE, 1
	removeobject LOCALID_SCOTT
	release
	end

MossdeepCity_EventScript_ScottExitNorth::
	applymovement OBJ_EVENT_ID_PLAYER, MossdeepCity_Movement_PlayerWatchScottExit
	applymovement LOCALID_SCOTT, MossdeepCity_Movement_ScottExitNorth
	waitmovement 0
	return

MossdeepCity_EventScript_ScottExitEast::
	applymovement OBJ_EVENT_ID_PLAYER, MossdeepCity_Movement_PlayerWatchScottExit
	applymovement LOCALID_SCOTT, MossdeepCity_Movement_ScottExitEast
	waitmovement 0
	return

MossdeepCity_Movement_PlayerWatchScottExit:
	delay_16
	delay_16
	walk_in_place_faster_left
	step_end

MossdeepCity_Movement_ScottExitNorth:
	walk_left
	walk_left
	walk_left
	walk_left
	walk_left
	walk_left
	walk_left
	walk_left
	walk_left
	step_end

MossdeepCity_Movement_ScottExitEast:
	walk_down
	walk_left
	walk_left
	walk_left
	walk_left
	walk_left
	walk_left
	walk_left
	walk_left
	walk_left
	step_end

MossdeepCity_Text_WantKingsRockStevenGaveMe:
	.string "I got this from STEVEN, but I don't\n"
	.string "know what it's good for.\p"
	.string "I think it's called KING'S ROCK.\n"
	.string "Do you want it?$"

MossdeepCity_Text_YouCanKeepIt:
	.string "Why would you want it?\n"
	.string "You're weird.\p"
	.string "You can keep it, but keep it a secret\n"
	.string "from STEVEN.$"

MossdeepCity_Text_StevensHouseOverThere:
	.string "STEVEN's house is right over there!$"

MossdeepCity_Text_WhatToDoWithWeirdRock:
	.string "Yeah, you think so, too! What are you\n"
	.string "supposed to do with some weird rock?$"

MossdeepCity_Text_WailmerWatching:
	.string "Around MOSSDEEP, you can see wild\n"
	.string "WAILMER.\p"
	.string "It's called, uh…\n"
	.string "What was it now…\p"
	.string "WAI, WAI, WAI…\p"
	.string "WAILMER watching!$"

MossdeepCity_Text_SpaceCenterReceivedLetter:
	.string "The island's SPACE CENTER has been\n"
	.string "launching huge rockets.\p"
	.string "There's been some kind of an uproar\n"
	.string "over a letter they received recently.$"

MossdeepCity_Text_SpaceCenterLaunchingRockets:
	.string "The island's SPACE CENTER has been\n"
	.string "launching huge rockets.$"

MossdeepCity_Text_MossdeepTargetedByMagma:
	.string "I heard from a SAILOR buddy that\n"
	.string "TEAM AQUA set up shop in LILYCOVE.\p"
	.string "I also heard that someone came along\n"
	.string "and wiped the floor with them!\p"
	.string "But MOSSDEEP here's been targeted\n"
	.string "by that TEAM MAGMA.\p"
	.string "If you want to know what they're up to,\n"
	.string "go visit the SPACE CENTER.$"

MossdeepCity_Text_FeelReliefOnLand:
	.string "I'm a SAILOR, so the sea's obviously\n"
	.string "more important to me.\p"
	.string "But you know? When I get back on land\n"
	.string "after a long voyage, I do feel relief!$"

MossdeepCity_Text_NiceIfWorldCoveredByFlowers:
	.string "Wouldn't it be nice?\p"
	.string "If the whole world was covered in\n"
	.string "plants and flowers like this island?$"

MossdeepCity_Text_LifeNeedsSeaToLive:
	.string "All life needs the sea to live, even\n"
	.string "though it makes its home on the land.\p"
	.string "Life, having run its course, becomes\n"
	.string "soil and returns to the land.\p"
	.string "And the sea is always connected to\n"
	.string "the land.\p"
	.string "Yes, like the very shoreline here.$"

MossdeepCity_Text_SurfExhilarating:
	.string "A voyage on a ship is fine.\p"
	.string "But crossing the sea with POKéMON\n"
	.string "using SURF…\p"
	.string "Now that's an exhilarating trip!\n"
	.string "Wouldn't you agree, youngster?$"

MossdeepCity_Text_SpecialSpaceCenterRock:
	.string "This rock has a special meaning to\n"
	.string "the people at the SPACE CENTER.\p"
	.string "They put it here as their wish for\n"
	.string "their rockets to fly safely.\p"
	.string "When you make a wish, what do you use?\n"
	.string "Do you wish upon a star?\p"
	.string "I use a wish tag to make it happen.\n"
	.string "That's what I do.$"

MossdeepCity_Text_ItsAWhiteRock:
	.string "It's a white rock.$"

MossdeepCity_Text_GymSign:
	.string "MOSSDEEP CITY POKéMON GYM\n"
	.string "LEADERS: LIZA & TATE\p"
	.string "“The mystic combination!”$"

MossdeepCity_Text_CitySign:
	.string "MOSSDEEP CITY\n"
	.string "“Our slogan: Cherish POKéMON!”$"

MossdeepCity_Text_SpaceCenterSign:
	.string "MOSSDEEP SPACE CENTER\n"
	.string "“The closest place to space.”$"

MossdeepCity_Text_ScottSomethingWrongWithTown:
	.string "SCOTT: {PLAYER}{KUN}, feeling good?\n"
	.string "I'm doing great!\p"
	.string "I'd heard MOSSDEEP's GYM LEADER is\n"
	.string "pretty strong, so I decided to come\l"
	.string "take a look-see for myself.\p"
	.string "But there's something wrong about\n"
	.string "this town.\p"
	.string "People are going on about a warning\n"
	.string "letter and the SPACE CENTER…\p"
	.string "I don't think it concerns me in any\n"
	.string "way, though.$"

MossdeepCity_Text_SootopolisNewGymLeader:
	.string "Ahh… It feels great letting the waves\n"
	.string "wash over my feet…\p"
	.string "Speaking of the waves, you know that\n"
	.string "island city SOOTOPOLIS?\p"
	.string "I think the GYM there had a new\n"
	.string "LEADER come in.\p"
	.string "People tell me the new LEADER once\n"
	.string "mentored WALLACE.$"

`

script MossdeepCity_EventScript_WhiteRockEvent
{

	lock
	msgbox(format("It's a white rock."))
	closemessage
	if(flag(FLAG_SPOKE_TO_MOSSDEEP_WHITE_ROCK_LADY) && !flag(FLAG_ENCOUNTERED_JIRACHI))
	{
		msgbox(format("The woman's words and the rock fill your head with wishes. Maybe there's a way to make a wish here."))
		closemessage

		checkitem(ITEM_WISHING_STAR)
		if(var(VAR_RESULT) == 1) // if player has wishing star
		{
			msgbox(format("Place a Wishing Star with the white rock?"), MSGBOX_YESNO)
			if(var(VAR_RESULT) == 1)
			{
				removeitem(ITEM_WISHING_STAR)
				setflag(FLAG_ENCOUNTERED_JIRACHI)
				msgbox(format("The Wishing Star begins to shine!"))
				closemessage
				msgbox(format("...  ...  ...  ...!"))
				waitmessage
				fadescreen(FADE_TO_WHITE)
				delay(60)
				fadescreen(FADE_FROM_WHITE)
				delay(30)
				playmoncry(SPECIES_JIRACHI, CRY_MODE_ENCOUNTER)
				delay(40)
				waitmoncry
				seteventmon(SPECIES_JIRACHI, 10)
				special(BattleSetup_StartLegendaryBattle)
			}
		}
	}
	release
	end

}

script MossdeepCity_EventScript_LegendarySailor
{

	lock
	if(!flag(FLAG_MET_LEGENDARY_SAILOR)) // meeting sailor for first time
	{
		setflag(FLAG_MET_LEGENDARY_SAILOR)
		msgbox(format("Ah, the sea... The smell of salt 'n the air... Can't help but think o' me past..."))
		closemessage
		applymovement(18, Common_Movement_ExclamationMark)
		waitmovement(0)
		applymovement(18, Common_Movement_FacePlayer)
		waitmovement(0)
		msgbox(format("Oho! Hey there, young'n! Listenin' to an old sailor like me ramble, eh?"))
	}

	applymovement(18, Common_Movement_FacePlayer)
	waitmovement(0)

	if(!flag(FLAG_BADGE07_GET)) // if player hasnt gotten Tate & Liza's badge
	{
		msgbox(format("Hmm... with just a bit more training, ya could be my successor! A sailor, an explorer, an adventurer!\p Come back to me after beating TATE and LIZA."))
		closemessage
	}
	else // else, if player has beaten Tate & liza
	{
		if(!flag(FLAG_BECAME_SAILOR_SUCCESSOR))
		{
			setflag(FLAG_BECAME_SAILOR_SUCCESSOR)
			msgbox(format("The GYM BADGE from this island, huh? Not bad! From now on, y'ar my successor!\p I've been to many-a wild place at sea, and soon, you will too!"))
			closemessage
			msgbox(format("As my successor, ye'll sail to places with POKéMON ye've never seen before!\p Come talk to me again if ye're looking for adventure!"))
			closemessage
			release
			end
		}

		// Quest 1 - Show Sailor the Pokédex entry of Rhydon, get Old Sea Map (Mew)
		if(!flag(FLAG_RECEIVED_OLD_SEA_MAP))
		{
			msgbox(format("Ahoy thar, my li'l sailor! I've got an OLD SEA MAP that leads to a mysterious island, a truly wond'rous place!"))
			closemessage
			msgbox(format("...! Wahaha! No no, ya have to prove yerself before getting my tickets and maps!\p Fer this OLD SEA MAP, show me the POKéDEX entry fer one of the first discovered POKéMON, RHYDON!"))
			closemessage
			getcaughtmon(SPECIES_RHYDON)

			if(var(VAR_RESULT) == 0) // do not have rhydon caught
			{
				msgbox(format("Looks like ya haven't caught a RHYDON yet, kiddo. Get to work!"))
				closemessage
				release
				end
			}
			else // have a RHYDON entry
			{
				msgbox(format("...Oho! Whoo-doggy! Seems like ya caught yerself a RHYDON!\p That there was one of the first discovered POKéMON, seems ya've come to respect it.\p Now, yer reward!"))
				closemessage
				giveitem(ITEM_OLD_SEA_MAP)
				setflag(FLAG_RECEIVED_OLD_SEA_MAP)
				setflag(FLAG_ENABLE_SHIP_FARAWAY_ISLAND)
				msgbox(format("Ah, an' here's a FERRY ticket!"))
				closemessage
				giveitem(ITEM_SS_TICKET)
				setflag(FLAG_RECEIVED_SS_TICKET)
				setflag(FLAG_HIDE_SLATEPORT_CITY_STERNS_SHIPYARD_MR_BRINEY)
				clearflag(FLAG_HIDE_SS_TIDAL_CORRIDOR_MR_BRINEY)
				clearflag(FLAG_HIDE_SLATEPORT_CITY_HARBOR_SS_TIDAL)
				clearflag(FLAG_HIDE_LILYCOVE_HARBOR_SSTIDAL)
				msgbox(format("Show that to the FERRY sailor in the LILYCOVE HARBOR and they'll bring ya where ya need!\p Good luck, li'l sailor! And come back soon, I have more for ya!"))
				closemessage
				release
				end
			}
		}

		// Quest 2 - Show Sailor the Pokédex entry of Octillery, get Mystic Ticket (Ho-oh and Lugia)
		elif(!flag(FLAG_RECEIVED_MYSTIC_TICKET))
		{
			msgbox(format("Oho, back for more, eh? A sailor after me own heart!\p I'll give you this here Mystic Ticket if you can show me that ye've caught real special POKéMON.\p I wan'na see a POKéMON with control over WATER and FIRE types!"))
			closemessage
			getcaughtmon(SPECIES_OCTILLERY)

			if(var(VAR_RESULT) == 0) // does not have Octillery
			{
				msgbox(format("Hmm... looks like ya haven't caught the POKéMON yet. Come back when ya figure out my clue and catch the POKéMON."))
				closemessage
				release
				end
			}
			else // has Octillery dex entry
			{
				msgbox(format("Ha-hey! Looks like ya figured it out, I knew ya'd do it!\N Octillery was first found in the JOHTO Region, but in HOENN, they're WATER and FIRE types.\p But ya're not here for a history lesson! Here ya go!"))
				closemessage
				giveitem(ITEM_MYSTIC_TICKET)
				setflag(FLAG_RECEIVED_MYSTIC_TICKET)
				setflag(FLAG_ENABLE_SHIP_NAVEL_ROCK)
				msgbox(format("Just like the OLD SEA MAP, show that ticket to the LILYCOVE HARBOR sailor and ya'll be off!\p Good luck, li'l sailor! And come back soon, I have more for ya!"))
				release
				end
			}
		}

		// Quest 3 - Show Sailor the Pokédex entry of Rayquaza, get Aurora Ticket (Deoxys)
		elif(!flag(FLAG_RECEIVED_AURORA_TICKET))
		{
			msgbox(format("Here to chase another adventure, eh? This time, I've got a real marv'lous place in mind!\p Y'see, I passed this island on a wild voyage, and I saw the strangest thing, it looked like an alien!\p Prove to me ya can handle it by showing me the POKéDEX entry for the great DRAGON of the skies, RAYQUAZA."))
			closemessage
			getcaughtmon(SPECIES_RAYQUAZA)

			if(var(VAR_RESULT) == 0) // does not have Rayquaza
			{
				msgbox(format("Hmm... looks like ya're still searching fer RAYQUAZA. Only a brave TRAINER like yerself can hope to capture such a fearsome power. Come back when ya're ready!"))
				closemessage
				release
				end
			}
			else // has Rayquaza dex entry
			{
				msgbox(format("Incred'ble! That's the data fer RAYQUAZA! Having a POKéMON like that'll help ya handle this 'ere island.\p As promised, here's yer ticket!"))
				closemessage
				giveitem(ITEM_AURORA_TICKET)
				setflag(FLAG_ENABLE_SHIP_BIRTH_ISLAND)
				setflag(FLAG_RECEIVED_AURORA_TICKET)
				msgbox(format("I bet that FERRY in LILYCOVE 'ill give ya a ride to BIRTH ISLAND! Be careful, li'l sailor, and come back soon!"))
				closemessage
				release
				end
			}
		}

		// First 3 Quests completed - Sailor will start appearing across Hoenn for rest of Legendary encounters
		elif(flag(FLAG_HIDE_SAILOR_ACROSS_HOENN))
		{
			msgbox(format("Welcome back, li'l sailor! Ye've inspired me to get back to explorin' myself! Don't ye be surprised if ye see me out across HOENN lookin' fer more LEGENDARY POKéMON! Look fer me eyepatch to find me!"))
			closemessage
			msgbox(format("I've heard some sailor's tales about special POKéMON in GRANITE CAVE, a LEGENDARY trio in SHOAL CAVE, another trio at the peak of MT. PYRE, an' a final LEGENDARY in ROUTE 119.\p Hope to see you out there, li'l sailor!"))
			closemessage
			clearflag(FLAG_HIDE_SAILOR_ACROSS_HOENN)
			release
			end
		}

		// All legendary quests have been completed, this sailor will be found around HOENN in event spots for other legendaries
		else
		{
			msgbox(format("I've heard some sailor's tales about special POKéMON in GRANITE CAVE, a LEGENDARY trio in SHOAL CAVE, another trio at the peak of MT. PYRE, an' a final LEGENDARY in ROUTE 119.\p See you out there, li'l sailor!\N Oh, an' if ye're wantin' to pass the time before tryin' again, why not challenge the ELITE FOUR?"))
			closemessage
			release
			end
		}
	}
	release
	end

}

script MossdeepCity_EventScript_GameCornerSign
{
	lock
	msgbox(format("MOSSDEEP CITY GAME CORNER\N Come play PINBALL!"))
	closemessage
	release
	end
}
